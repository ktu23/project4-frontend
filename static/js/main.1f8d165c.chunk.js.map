{"version":3,"sources":["components/AutoDismissAlert/AutoDismissAlert.js","components/Header/Header.js","apiConfig.js","api/auth.js","components/auth/SignUp.js","components/AutoDismissAlert/messages.js","components/auth/SignIn.js","components/auth/SignOut.js","components/auth/ChangePassword.js","components/listings/Home.js","api/listings.js","components/listings/Listing.js","components/listings/ListingForm.js","components/listings/ListingCreate.js","components/listings/ListingEdit.js","components/listings/Listings.js","components/listings/MyListings.js","App.js","index.js"],"names":["AutoDismissAlert","variant","heading","message","useState","show","setShow","timeoutId","setTimeoutId","console","log","useEffect","id","setTimeout","clearTimeout","Alert","onClose","dismissible","className","Heading","authenticatedOptions","to","unauthenticatedOptions","alwaysOptions","Header","user","Navbar","bg","expand","Container","Brand","style","color","textDecoration","Toggle","aria-controls","Collapse","Nav","email","apiUrls","apiUrl","window","location","hostname","signUp","password","passwordConfirmation","axios","post","credentials","password_confirmation","signIn","signOut","delete","headers","Authorization","token","changePassword","oldPassword","newPassword","patch","passwords","old","new","SignUp","msgAlert","setUser","setEmail","setPassword","setPasswordConfirmation","shouldNavigate","setShouldNavigate","onSignUp","event","a","preventDefault","res","data","Form","onSubmit","Group","controlId","Label","Control","required","type","name","value","placeholder","onChange","target","Button","SignIn","onSignIn","SignOut","clearUser","performSignOut","ChangePassword","setOldPassword","setNewPassword","onChangePassword","Home","createListing","title","content","indexListings","get","indexMyListings","showListing","deleteListing","updateListing","Listing","listing","setListing","deleted","setDeleted","useParams","fetchData","handleDeleteClick","onClick","Spinner","animation","role","ListingForm","handleSubmit","setTitle","setContent","ListingCreate","createdId","setCreatedId","_id","ListingEdit","updated","setUpdated","Listings","listings","setListings","posts","listingsList","map","MyListings","App","msgAlerts","setMsgAlerts","uuid","deleteAlert","filter","msg","path","element","appJsx","basename","process","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1f8d165c.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\n\n// We have imported some custom styling for this alert\n// Which will be off-topic, unless extra time at the end of the lesson.\nimport './AutoDismissAlert.scss'\nimport Alert from 'react-bootstrap/Alert'\n\nfunction AutoDismissAlert ({ variant, heading, message }) {\n  // create `show` state. When this is false, the Alert will be hidden from the screen.\n  const [show, setShow] = useState(true)\n  // We are going to create a timer that will stop showing the alert after 5 seconds\n  // We store the timeoutId, incase we need to cancel the timer early (because the AutoDismissAlert was unmounted)\n  const [timeoutId, setTimeoutId] = useState(null)\n  console.log(timeoutId)\n\n  // this will run once, when the component is mounted (added) to the screen\n  // it runs once, because it has an empty dependency array as the second argument\n  useEffect(() => {\n    // We want to create a timer, that closes the alert after 5 seconds (5000 milliseconds)\n    const id = setTimeout(() => setShow(false), 5000)\n    // Keep track of the timeoutId\n    setTimeoutId(id)\n\n    // We want to clean up the timer\n    // this is like componentWillUnmount, it is run whenever the component is unmounted\n    // and its also run before an effect is re-created\n    return function cleanup () {\n      clearTimeout(timeoutId)\n    }\n  }, [])\n\n  return (\n    <Alert\n      /* This is the color, make it the bootstrap passed down as a prop */\n      variant={variant}\n      /* This function sets the show state to false, whenever the x in the top right is clicked. */\n      onClose={() => setShow(false)}\n      /* This adds a close button to our alert */\n      dismissible\n      /* The show property will display the alert if true, and hide it if false. */\n      show={show}\n    >\n      <div className='container'>\n        <Alert.Heading>{heading}</Alert.Heading>\n        <p className='alert-body'>{message}</p>\n      </div>\n    </Alert>\n  )\n}\n\nexport default AutoDismissAlert\n","import React from 'react'\nimport { NavLink, Link } from 'react-router-dom'\n\n// import Navbar from 'react-bootstrap/Navbar'\n// import Container from 'react-bootstrap/Container'\n// import Nav from 'react-bootstrap/Nav'\nimport { Navbar, Nav, Container } from 'react-bootstrap'\n\n// These are the links you'll see if you're signed in\nconst authenticatedOptions = (\n  <>\n    <NavLink to='/mylistings' className='nav-link'>\nMy Listings\n    </NavLink>\n    <NavLink to='/listings' className='nav-link'>\nAll Listings\n    </NavLink>\n    <NavLink to='/listings/create' className='nav-link'>\nMake a Listing\n    </NavLink>\n    {/* <NavDropdown> */}\n    <NavLink to='/change-password' className='nav-link'>\nChange Password\n    </NavLink>\n    <NavLink to='/sign-out' className='nav-link'>\nSign Out\n    </NavLink>\n    {/* </NavDropdown> */}\n  </>\n)\n\n// These are the links you'll see if you're signed out\nconst unauthenticatedOptions = (\n  // <>\n  //   <NavDropdown>\n  //     <NavLink to='/sign-up' className='nav-link'>Sign Up</NavLink>\n  //     <NavLink to='/sign-in' className='nav-link'>Sign In</NavLink>\n  //   </NavDropdown>\n  // </>\n\n  <>\n    <NavLink to='/sign-up' className='nav-link'>Sign Up</NavLink>\n    <NavLink to='/sign-in' className='nav-link'>Sign In</NavLink>\n  </>\n)\n\n// These are the navigation links that will always show\nconst alwaysOptions = (\n  <>\n    <NavLink to='/' className='nav-link'>Home</NavLink>\n  </>\n)\n\nconst Header = ({ user }) => (\n  <Navbar bg='info' expand='md' variant='dark'>\n    <Container>\n      <Navbar.Brand>\n        {/* Text decoration: none, will remove the underline text decoration\n            from the link */}\n        <Link to='/' style={{ color: '#FFF', textDecoration: 'none' }}>Private Listings\n        </Link>\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls='basic-navbar-nav' />\n      <Navbar.Collapse id='basic-navbar-nav'>\n        {/* Add margin to the start (left) automatically\n            So that the links are pushed to the right side of the screen. */}\n        <Nav className='ms-auto'>\n          {/* If we have a user, show the span component */}\n          {user && (\n          /* Add some margin after the welcome message to separate it from the following links */\n            <span className='navbar-text me-2'>Welcome, {user.email}</span>\n          )}\n          {alwaysOptions}\n          {/* If we have a user (it isnt null), show the authenticated links\n              otherwise show the unauthenticated links */}\n          {user ? authenticatedOptions : unauthenticatedOptions}\n        </Nav>\n      </Navbar.Collapse>\n    </Container>\n  </Navbar>\n)\n\nexport default Header\n","let apiUrl\nconst apiUrls = {\n  production: 'https://quiet-mountain-22155.herokuapp.com',\n  development: 'http://localhost:4741'\n}\n\nif (window.location.hostname === 'localhost') {\n  apiUrl = apiUrls.development\n} else {\n  apiUrl = apiUrls.production\n}\n\nexport default apiUrl\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const signUp = (email, password, passwordConfirmation) => {\n  return axios.post(apiUrl + '/sign-up/', {\n    credentials: {\n      email,\n      password,\n      password_confirmation: passwordConfirmation\n    }\n  })\n}\n\nexport const signIn = (email, password) => {\n  return axios.post(apiUrl + '/sign-in/', {\n    credentials: {\n      email,\n      password\n    }\n  })\n}\n\nexport const signOut = user => {\n  return axios.delete(apiUrl + '/sign-out/', {\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\nexport const changePassword = (oldPassword, newPassword, user) => {\n  return axios.patch(\n    apiUrl + '/change-password/',\n    {\n      passwords: {\n        old: oldPassword,\n        new: newPassword\n      }\n    },\n    {\n      headers: {\n        Authorization: `Bearer ${user.token}`\n      }\n    }\n  )\n}\n","import React, { useState } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { signUp, signIn } from '../../api/auth'\nimport { signUpSuccess, signUpFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst SignUp = ({ msgAlert, setUser }) => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [passwordConfirmation, setPasswordConfirmation] = useState('')\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  const onSignUp = async (event) => {\n    event.preventDefault()\n\n    try {\n      await signUp(email, password, passwordConfirmation)\n      const res = await signIn(email, password)\n      setUser(res.data.user)\n      msgAlert({\n        heading: 'Sign Up Success',\n        message: signUpSuccess,\n        variant: 'success'\n      })\n      setShouldNavigate(true)\n    } catch (error) {\n      setEmail('')\n      setPassword('')\n      setPasswordConfirmation('')\n      msgAlert({\n        heading: 'Sign Up Failed with error: ' + error.message,\n        message: signUpFailure,\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Sign Up</h3>\n        <Form onSubmit={onSignUp}>\n          <Form.Group controlId='email'>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type='email'\n              name='email'\n              value={email}\n              placeholder='Enter email'\n              onChange={event => setEmail(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={event => setPassword(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='passwordConfirmation'>\n            <Form.Label>Password Confirmation</Form.Label>\n            <Form.Control\n              required\n              name='passwordConfirmation'\n              value={passwordConfirmation}\n              type='password'\n              placeholder='Confirm Password'\n              onChange={event => setPasswordConfirmation(event.target.value)}\n            />\n          </Form.Group>\n          <Button className='mt-2' variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default SignUp\n","export const signUpSuccess = 'Successfully registered! You\\'ve been signed in as well.'\nexport const signUpFailure = 'Registration failed. Email may be taken, or passwords don\\'t match.'\nexport const signInSuccess = 'Welcome!'\nexport const signInFailure = 'Failed to sign in. Check your email and password and try again.'\nexport const signOutSuccess = 'Come back soon!'\nexport const changePasswordSuccess = 'Password changed successfully!'\nexport const changePasswordFailure = 'Failed to change passwords. Check your old password and try again.'\n","import React, { useState } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { signIn } from '../../api/auth'\nimport { signInSuccess, signInFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst SignIn = ({ msgAlert, setUser }) => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  const onSignIn = async (event) => {\n    event.preventDefault()\n\n    try {\n      const res = await signIn(email, password)\n      setUser(res.data.user)\n\n      msgAlert({\n        heading: 'Sign In Success',\n        message: signInSuccess,\n        variant: 'success'\n      })\n      setShouldNavigate(true)\n    } catch (error) {\n      setEmail('')\n      setPassword('')\n      msgAlert({\n        heading: 'Sign In Failed with error: ' + error.message,\n        message: signInFailure,\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Sign In</h3>\n        <Form onSubmit={onSignIn}>\n          <Form.Group controlId='email'>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type='email'\n              name='email'\n              value={email}\n              placeholder='Enter email'\n              onChange={event => setEmail(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={event => setPassword(event.target.value)\n              }\n            />\n          </Form.Group>\n          <Button className='mt-2' variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default SignIn\n","import React, { useState, useEffect } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { signOut } from '../../api/auth'\nimport { signOutSuccess } from '../AutoDismissAlert/messages'\n\nconst SignOut = ({ msgAlert, clearUser, user }) => {\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  // this is like componentDidMount, it will run whenever the SignOut component\n  // is mounted (or added) to the page\n  useEffect(() => {\n  // for performance reasons, when using `useEffect`\n  // it's a best practice to create a helper function w/ async/await\n    const performSignOut = async () => {\n    // make a signOut axios request\n      await signOut(user)\n\n      msgAlert({\n        heading: 'Signed Out Successfully',\n        message: signOutSuccess,\n        variant: 'success'\n      })\n\n      // reset the user back to its initial value\n      clearUser()\n      setShouldNavigate(true)\n    }\n    performSignOut()\n  }, [])\n\n  if (!user || shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  return ''\n}\n\nexport default SignOut\n","import React, { useState } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { changePassword } from '../../api/auth'\nimport { changePasswordSuccess, changePasswordFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst ChangePassword = ({ msgAlert, user }) => {\n  const [oldPassword, setOldPassword] = useState('')\n  const [newPassword, setNewPassword] = useState('')\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  const onChangePassword = async (event) => {\n    event.preventDefault()\n\n    try {\n      await changePassword(oldPassword, newPassword, user)\n      msgAlert({\n        heading: 'Change Password Success',\n        message: changePasswordSuccess,\n        variant: 'success'\n      })\n      setShouldNavigate(true)\n    } catch (error) {\n      setOldPassword('')\n      setNewPassword('')\n      msgAlert({\n        heading: 'Change Password Failed with error: ' + error.message,\n        message: changePasswordFailure,\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (!user || shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Change Password</h3>\n        <Form onSubmit={onChangePassword}>\n          <Form.Group controlId='oldPassword'>\n            <Form.Label>Old password</Form.Label>\n            <Form.Control\n              required\n              name='oldPassword'\n              value={oldPassword}\n              type='password'\n              placeholder='Old Password'\n              onChange={event => setOldPassword(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='newPassword'>\n            <Form.Label>New Password</Form.Label>\n            <Form.Control\n              required\n              name='newPassword'\n              value={newPassword}\n              type='password'\n              placeholder='New Password'\n              onChange={event => setNewPassword(event.target.value)\n              }\n            />\n          </Form.Group>\n          <Button className='mt-2' variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default ChangePassword\n","import React from 'react'\r\n\r\nconst Home = () => (\r\n  <h1> The most exclusive resource for top producing real estate agents. </h1>\r\n)\r\n\r\nexport default Home\r\n\r\n// import React, { useEffect, useState } from 'react'\r\n// import { Link } from 'react-router-dom'\r\n\r\n// import { Spinner } from 'react-bootstrap'\r\n// import { indexListings } from '../../api/listings'\r\n\r\n// const Home = ({ msgAlert }) => {\r\n//   const [listings, setListings] = useState(null)\r\n\r\n//   // Run once, when the component mounts\r\n//   useEffect(() => {\r\n//     // When using async & await in a `useEffect` function\r\n//     // We have to wrap our `async` code in a function:\r\n//     // https://stackoverflow.com/a/53572588\r\n//     const fetchData = async () => {\r\n//       try {\r\n//         const res = await indexListings()\r\n//         setListings(res.data.listings)\r\n//       } catch (error) {\r\n//         msgAlert({\r\n//           heading: 'Listings failed to load',\r\n//           message: error.message,\r\n//           variant: 'danger'\r\n//         })\r\n//       }\r\n//     }\r\n//     fetchData()\r\n//   }, [])\r\n\r\n//   // If listings are `null`, we are loading\r\n//   if (!listings) {\r\n//     return (\r\n//       <Spinner animation='border' role='status'>\r\n//         <span className='visually-hidden'>Loading...</span>\r\n//       </Spinner>\r\n//     )\r\n//   }\r\n\r\n//   // Otherwise, display the listings\r\n//   const listingsList = listings.map((listing) => (\r\n//     <li key={listing._id}>\r\n//       <Link to={`/listings/${listing._id}`}>{listing.title}</Link>\r\n//     </li>\r\n//   ))\r\n\r\n//   return (\r\n//     <div className='row'>\r\n//       <div className='col-sm-10 col-md-8 mx-auto mt-5'>\r\n//         <h3>Listings</h3>\r\n//         <ul>{listingsList}</ul>\r\n//       </div>\r\n//     </div>\r\n//   )\r\n// }\r\n// export default Home\r\n","import axios from 'axios'\r\nimport apiUrl from '../apiConfig'\r\n\r\nexport const createListing = (title, content, user) => {\r\n  return axios.post(\r\n    `${apiUrl}/posts`,\r\n    { post: { title, content } },\r\n    // Pass along the authorization which includes our user's token\r\n    {\r\n      headers: {\r\n        Authorization: `Bearer ${user.token}`\r\n      }\r\n    }\r\n  )\r\n}\r\n\r\nexport const indexListings = (user) => {\r\n  return axios.get(`${apiUrl}/posts`,\r\n    {\r\n      headers: {\r\n        Authorization: `Bearer ${user.token}`\r\n      }\r\n    })\r\n}\r\n\r\nexport const indexMyListings = (user) => {\r\n  return axios.get(`${apiUrl}/myposts`, {\r\n    headers: {\r\n      Authorization: `Bearer ${user.token}`\r\n    }\r\n  })\r\n}\r\n\r\nexport const showListing = (id, user) => {\r\n  return axios.get(`${apiUrl}/posts/${id}/`, {\r\n    headers: {\r\n      Authorization: `Bearer ${user.token}`\r\n    }\r\n  })\r\n}\r\n\r\nexport const deleteListing = (id, user) => {\r\n  return axios.delete(`${apiUrl}/posts/${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${user.token}`\r\n    }\r\n  })\r\n}\r\n\r\nexport const updateListing = (id, title, content, user) => {\r\n  return axios.patch(\r\n    `${apiUrl}/posts/${id}`,\r\n    { post: { title, content } },\r\n    {\r\n      headers: {\r\n        Authorization: `Bearer ${user.token}`\r\n      }\r\n    }\r\n  )\r\n}\r\n","// import React, { useState, useEffect } from 'react'\r\n// import { Link, Navigate, useParams } from 'react-router-dom'\r\n// import { Spinner, Button } from 'react-bootstrap'\r\n\r\n// import { deleteListing, showListing } from '../../api/listings'\r\n\r\n// const Listing = ({ user, msgAlert }) => {\r\n//   const [listing, setListing] = useState(null)\r\n//   const [deleted, setDeleted] = useState(false)\r\n//   const { id } = useParams()\r\n\r\n//   // if user is null, redirect to home page\r\n//   // Note: Must check before useEffect, since it needs user\r\n\r\n//   useEffect(() => {\r\n//     // When using async & await in a `useEffect` function\r\n//     // We have to wrap our `async` code in a function:\r\n//     // https://stackoverflow.com/a/53572588\r\n//     const fetchData = async () => {\r\n//       try {\r\n//         const res = await showListing(id)\r\n//         setListing(res.data.listing)\r\n//       } catch (error) {\r\n//         msgAlert({\r\n//           heading: 'Listing failed to load',\r\n//           message: error.message,\r\n//           variant: 'danger'\r\n//         })\r\n//       }\r\n//     }\r\n//     fetchData()\r\n//   }, [])\r\n//   const handleDeleteClick = async () => {\r\n//     try {\r\n//       await deleteListing(id, user)\r\n//       setDeleted(true)\r\n//     } catch (error) {\r\n//       msgAlert({\r\n//         heading: 'Failed to delete the listing',\r\n//         message: error.message,\r\n//         variant: 'danger'\r\n//       })\r\n//     }\r\n//   }\r\n\r\n//   // 3 states:\r\n//   // If listing is `null`, we are loading\r\n//   if (!listing) {\r\n//     return (\r\n//       <Spinner animation='border' role='status'>\r\n//         <span className='visually-hidden'>Loading...</span>\r\n//       </Spinner>\r\n//     )\r\n//   } else if (deleted) {\r\n//     return <Navigate to='/listings' />\r\n//   } else if (user) {\r\n//     if (user._id !== listing.owner) {\r\n//       // console.log(user._id)\r\n//       // console.log(listing.owner)\r\n//       // We have a listing, display it!\r\n//       return (\r\n//         <div className='row'>\r\n//           <div className='col-sm-10 col-md-8 mx-auto mt-5'>\r\n//             <h3>{listing.title}</h3>\r\n//             <p>{listing.content}</p>\r\n//           </div>\r\n//         </div>\r\n//         // ** add comment component ? **\r\n//       )\r\n//     } else {\r\n//       // We have a listing, display it!\r\n//       return (\r\n//         <div className='row'>\r\n//           <div className='col-sm-10 col-md-8 mx-auto mt-5'>\r\n//             <h3>{listing.title}</h3>\r\n//             <p>{listing.content}</p>\r\n//             <Button variant='danger' onClick={handleDeleteClick}>\r\n// Delete Listing\r\n//             </Button>\r\n//             <Link to={`/listings/${id}/edit`}>\r\n//               <Button variant='primary' type='submit'>\r\n// Update Listing\r\n//               </Button>\r\n//             </Link>\r\n//           </div>\r\n//         </div>\r\n//       )\r\n//     }\r\n//   } else {\r\n//     // Unauthenticated View\r\n//     return (\r\n//       <div className='row'>\r\n//         <div className='col-sm-10 col-md-8 mx-auto mt-5'>\r\n//           <h3>{listing.title}</h3>\r\n//           <p>{listing.content}</p>\r\n//         </div>\r\n//       </div>\r\n//     )\r\n//   }\r\n// }\r\n\r\n// export default Listing\r\n\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link, Navigate, useParams } from 'react-router-dom'\r\nimport { Spinner, Button } from 'react-bootstrap'\r\n\r\nimport { deleteListing, showListing } from '../../api/listings'\r\n\r\nconst Listing = ({ user, msgAlert }) => {\r\n  const [listing, setListing] = useState(null)\r\n  const [deleted, setDeleted] = useState(false)\r\n  const { id } = useParams()\r\n\r\n  // if user is null, redirect to home page\r\n  // Note: Must check before useEffect, since it needs user\r\n  if (!user) {\r\n    return <Navigate to='/' />\r\n  }\r\n\r\n  useEffect(() => {\r\n    // When using async & await in a `useEffect` function\r\n    // We have to wrap our `async` code in a function:\r\n    // https://stackoverflow.com/a/53572588\r\n    const fetchData = async () => {\r\n      try {\r\n        const res = await showListing(id, user)\r\n        setListing(res.data.post)\r\n      } catch (error) {\r\n        msgAlert({\r\n          heading: 'Listing failed to load',\r\n          message: error.message,\r\n          variant: 'danger'\r\n        })\r\n      }\r\n    }\r\n    fetchData()\r\n  }, [])\r\n\r\n  const handleDeleteClick = async () => {\r\n    try {\r\n      await deleteListing(id, user)\r\n      setDeleted(true)\r\n    } catch (error) {\r\n      msgAlert({\r\n        heading: 'Failed to delete listing',\r\n        message: error.message,\r\n        variant: 'danger'\r\n      })\r\n    }\r\n  }\r\n\r\n  // 3 states:\r\n  // If listing is `null`, we are loading\r\n  if (!listing) {\r\n    return (\r\n      <Spinner animation='border' role='status'>\r\n        <span className='visually-hidden'>Loading...</span>\r\n      </Spinner>\r\n    )\r\n  } else if (deleted) {\r\n    return <Navigate to='/listings' />\r\n  } else {\r\n    // We have a listing, display it!\r\n    return (\r\n      <div className='row'>\r\n        <div className='col-sm-10 col-md-8 mx-auto mt-5'>\r\n          <h3>{listing.title}</h3>\r\n          <p>Listing Content: {listing.content}</p>\r\n          <Button variant='danger' onClick={handleDeleteClick}>Delete Listing</Button>\r\n          <Link to={`/listings/${id}/edit`}>\r\n            <Button variant='primary' type='submit'>Update Listing</Button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Listing\r\n","import React from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\n\r\nconst ListingForm = ({ handleSubmit, title, content, setTitle, setContent }) => (\r\n  <Form onSubmit={handleSubmit}>\r\n    <Form.Group controlId='title'>\r\n      <Form.Label>Title</Form.Label>\r\n      <Form.Control\r\n        placeholder='Listing...'\r\n        name='title'\r\n        value={title}\r\n        onChange={event => setTitle(event.target.value)}\r\n      />\r\n    </Form.Group>\r\n\r\n    <Form.Group controlId='content'>\r\n      <Form.Label>Content</Form.Label>\r\n      <Form.Control\r\n        placeholder='Listing Content'\r\n        name='content'\r\n        value={content}\r\n        onChange={event => setContent(event.target.value)}\r\n      />\r\n    </Form.Group>\r\n    <Button className='mt-2' variant='primary' type='submit'>Submit</Button>\r\n  </Form>\r\n)\r\n\r\nexport default ListingForm\r\n","import React, { useState } from 'react'\r\nimport { Navigate } from 'react-router-dom'\r\n\r\n// Import ListingForm:\r\nimport ListingForm from './ListingForm'\r\nimport { createListing } from '../../api/listings'\r\n\r\nconst ListingCreate = ({ user, msgAlert }) => {\r\n  const [title, setTitle] = useState('')\r\n  const [content, setContent] = useState('')\r\n  const [createdId, setCreatedId] = useState(null)\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault()\r\n\r\n    try {\r\n      const res = await createListing(title, content, user)\r\n      setCreatedId(res.data.post._id)\r\n\r\n      msgAlert({\r\n        heading: 'Listing Created',\r\n        message: `Created ${title} successfully.`,\r\n        variant: 'success'\r\n      })\r\n    } catch (error) {\r\n      msgAlert({\r\n        heading: 'Failed to make listing',\r\n        message: error.message,\r\n        variant: 'danger'\r\n      })\r\n    }\r\n  }\r\n\r\n  // if user is null, redirect to home page\r\n  if (!user) {\r\n    return <Navigate to='/' />\r\n  } else if (createdId) {\r\n    // if listing has been created, Navigate to the 'show' page\r\n    return <Navigate to={`/listings/${createdId}`} />\r\n  }\r\n  return (\r\n    <div className='row'>\r\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\r\n        <h3>Create Listing</h3>\r\n        <ListingForm\r\n          handleSubmit={handleSubmit}\r\n          title={title}\r\n          content={content}\r\n          setTitle={setTitle}\r\n          setContent={ setContent }\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ListingCreate\r\n","// import React, { useState, useEffect } from 'react'\r\n// import { Navigate, useParams } from 'react-router-dom'\r\n\r\n// import ListingForm from './ListingForm'\r\n// import { showListing, updateListing } from '../../api/listings'\r\n\r\n// const ListingEdit = ({ user, msgAlert }) => {\r\n//   const [title, setTitle] = useState('')\r\n//   const [content, setContent] = useState('')\r\n//   const [updated, setUpdated] = useState(false)\r\n//   const { id } = useParams()\r\n\r\n//   // if user is null, redirect to home page\r\n//   // Note: Must check before useEffect, since it needs user\r\n//   if (!user) {\r\n//     return <Navigate to='/' />\r\n//   }\r\n\r\n//   useEffect(() => {\r\n//     // When using async & await in a `useEffect` function\r\n//     // We have to wrap our `async` code in a function:\r\n//     // https://stackoverflow.com/a/53572588\r\n//     const fetchData = async () => {\r\n//       try {\r\n//         const res = await showListing(id, user)\r\n//         setTitle(res.data.listing.title)\r\n//         setContent(res.data.listing.content)\r\n//       } catch (error) {\r\n//         msgAlert({\r\n//           heading: 'Failed to load listing',\r\n//           message: error.message,\r\n//           variant: 'danger'\r\n//         })\r\n//       }\r\n//     }\r\n//     fetchData()\r\n//   }, [])\r\n\r\n//   const handleSubmit = async event => {\r\n//     event.preventDefault()\r\n\r\n//     try {\r\n//       await updateListing(id, title, content, user)\r\n//       setUpdated(true)\r\n//     } catch (error) {\r\n//       msgAlert({\r\n//         heading: 'Failed to update listing',\r\n//         message: error.message,\r\n//         variant: 'danger'\r\n//       })\r\n//     }\r\n//   }\r\n\r\n//   if (updated) {\r\n//     // Navigate to the 'show' page\r\n//     return <Navigate to={`/listings/${id}`} />\r\n//   }\r\n\r\n//   return (\r\n//     <div className='row'>\r\n//       <div className='col-sm-10 col-md-8 mx-auto mt-5'>\r\n//         <h3>Edit Listing</h3>\r\n//         <ListingForm\r\n//           handleSubmit={handleSubmit}\r\n//           title={title}\r\n//           content={content}\r\n//           setTitle={setTitle}\r\n//           setContent={setContent}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n// export default ListingEdit\r\n\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Navigate, useParams } from 'react-router-dom'\r\n\r\nimport ListingForm from './ListingForm'\r\nimport { showListing, updateListing } from '../../api/listings'\r\n\r\nconst ListingEdit = ({ user, msgAlert }) => {\r\n  const [title, setTitle] = useState('')\r\n  const [content, setContent] = useState('')\r\n  const [updated, setUpdated] = useState(false)\r\n  const { id } = useParams()\r\n\r\n  // if user is null, redirect to home page\r\n  // Note: Must check before useEffect, since it needs user\r\n  if (!user) {\r\n    return <Navigate to='/' />\r\n  }\r\n\r\n  useEffect(() => {\r\n    // When using async & await in a `useEffect` function\r\n    // We have to wrap our `async` code in a function:\r\n    // https://stackoverflow.com/a/53572588\r\n    const fetchData = async () => {\r\n      try {\r\n        const res = await showListing(id, user)\r\n        setTitle(res.data.post.title)\r\n        setContent(res.data.post.content)\r\n      } catch (error) {\r\n        msgAlert({\r\n          heading: 'Failed to load listing',\r\n          message: error.message,\r\n          variant: 'danger'\r\n        })\r\n      }\r\n    }\r\n    fetchData()\r\n  }, [])\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault()\r\n\r\n    try {\r\n      await updateListing(id, title, content, user)\r\n      setUpdated(true)\r\n    } catch (error) {\r\n      msgAlert({\r\n        heading: 'Failed to update listing',\r\n        message: error.message,\r\n        variant: 'danger'\r\n      })\r\n    }\r\n  }\r\n\r\n  if (updated) {\r\n    // Navigate to the 'show' page\r\n    return <Navigate to={`/listings/${id}`} />\r\n  }\r\n\r\n  return (\r\n    <div className='row'>\r\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\r\n        <h3>Edit Listing</h3>\r\n        <ListingForm\r\n          handleSubmit={handleSubmit}\r\n          title={title}\r\n          content={content}\r\n          setTitle={setTitle}\r\n          setContent={setContent}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ListingEdit\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Link, Navigate } from 'react-router-dom'\r\n\r\nimport { Spinner } from 'react-bootstrap'\r\nimport { indexListings } from '../../api/listings'\r\n\r\nconst Listings = ({ user, msgAlert }) => {\r\n  const [listings, setListings] = useState(null)\r\n\r\n  // if user is null, redirect to home page\r\n  // Note: Must check before useEffect, since it needs user\r\n  if (!user) {\r\n    return <Navigate to='/' />\r\n  }\r\n\r\n  // Run once, when the component mounts\r\n  useEffect(() => {\r\n    // When using async & await in a `useEffect` function\r\n    // We have to wrap our `async` code in a function:\r\n    // https://stackoverflow.com/a/53572588\r\n    const fetchData = async () => {\r\n      try {\r\n        const res = await indexListings(user)\r\n        setListings(res.data.posts)\r\n      } catch (error) {\r\n        msgAlert({\r\n          heading: 'Listings List failed to load',\r\n          message: error.message,\r\n          variant: 'danger'\r\n        })\r\n      }\r\n    }\r\n    fetchData()\r\n  }, [])\r\n\r\n  // If listings are `null`, we are loading\r\n  if (!listings) {\r\n    return (\r\n      <Spinner animation='border' role='status'>\r\n        <span className='visually-hidden'>Loading...</span>\r\n      </Spinner>\r\n    )\r\n  }\r\n\r\n  // Otherwise, display the listings\r\n  const listingsList = listings.map(listing => (\r\n    <li key={listing._id}>\r\n      <Link to={`/listings/${listing._id}`}>\r\n        {listing.title}\r\n      </Link>\r\n    </li>\r\n  ))\r\n\r\n  return (\r\n    <div className='row'>\r\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\r\n        <h3>Listings</h3>\r\n        <ul>{listingsList}</ul>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Listings\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Link, Navigate } from 'react-router-dom'\r\n\r\nimport { Spinner } from 'react-bootstrap'\r\nimport { indexMyListings } from '../../api/listings'\r\n\r\nconst MyListings = ({ user, msgAlert }) => {\r\n  const [listings, setListings] = useState(null)\r\n\r\n  // if user is null, redirect to home page\r\n  // Note: Must check before useEffect, since it needs user\r\n  if (!user) {\r\n    return <Navigate to='/' />\r\n  }\r\n\r\n  // Run once, when the component mounts\r\n  useEffect(() => {\r\n    // When using async & await in a `useEffect` function\r\n    // We have to wrap our `async` code in a function:\r\n    // https://stackoverflow.com/a/53572588\r\n    const fetchData = async () => {\r\n      try {\r\n        const res = await indexMyListings(user)\r\n        setListings(res.data.posts)\r\n      } catch (error) {\r\n        msgAlert({\r\n          heading: 'Listings failed to load',\r\n          message: error.message,\r\n          variant: 'danger'\r\n        })\r\n      }\r\n    }\r\n    fetchData()\r\n  }, [])\r\n\r\n  // If listings are `null`, we are loading\r\n  if (!listings) {\r\n    return (\r\n      <Spinner animation='border' role='status'>\r\n        <span className='visually-hidden'>Loading...</span>\r\n      </Spinner>\r\n    )\r\n  }\r\n\r\n  // Otherwise, display the listings\r\n  const listingsList = listings.map(listing => (\r\n    <li key={listing._id}>\r\n      <Link to={`/listings/${listing._id}`}>{listing.title}</Link>\r\n    </li>\r\n  ))\r\n\r\n  return (\r\n    <div className='row'>\r\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\r\n        <h3>Your Listings</h3>\r\n        <ul>{listingsList}</ul>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MyListings\r\n","/* eslint-disable no-tabs */\nimport React, { useState } from 'react'\nimport { Route, Routes } from 'react-router-dom'\nimport { v4 as uuid } from 'uuid'\n\nimport AutoDismissAlert from './components/AutoDismissAlert/AutoDismissAlert'\nimport Header from './components/Header/Header'\nimport SignUp from './components/auth/SignUp'\nimport SignIn from './components/auth/SignIn'\nimport SignOut from './components/auth/SignOut'\nimport ChangePassword from './components/auth/ChangePassword'\n\nimport Home from './components/listings/Home'\nimport Listing from './components/listings/Listing'\nimport ListingCreate from './components/listings/ListingCreate'\nimport ListingEdit from './components/listings/ListingEdit'\nimport Listings from './components/listings/Listings'\nimport MyListings from './components/listings/MyListings'\n\nconst App = () => {\n  const [user, setUser] = useState(null)\n  const [msgAlerts, setMsgAlerts] = useState([])\n\n  const clearUser = () => setUser(null)\n\n  const msgAlert = ({ heading, message, variant }) => {\n    const id = uuid()\n    setMsgAlerts(msgAlerts => ([...msgAlerts, { heading, message, variant, id }]))\n  }\n\n  const deleteAlert = id => {\n    setMsgAlerts(msgAlerts => msgAlerts.filter(msg => msg.id !== id))\n  }\n\n  return (\n    <>\n      <Header user={user} />\n      {msgAlerts.map(msgAlert => (\n        <AutoDismissAlert\n          key={msgAlert.id}\n          heading={msgAlert.heading}\n          variant={msgAlert.variant}\n          message={msgAlert.message}\n          id={msgAlert.id}\n          deleteAlert={deleteAlert}\n        />\n      ))}\n      <main className='container'>\n        <Routes>\n          <Route\n            path='/sign-up'\n            element={<SignUp msgAlert={msgAlert} setUser={setUser} /> }\n          />\n          <Route\n            path='/sign-in'\n            element={<SignIn msgAlert={msgAlert} setUser={setUser} /> }\n          />\n          <Route\n            path='/sign-out'\n            element={<SignOut msgAlert={msgAlert} clearUser={clearUser} user={user} /> }\n          />\n          <Route\n            path='/change-password'\n            element={<ChangePassword msgAlert={msgAlert} user={user} /> }\n          />\n\n          <Route path='/'\n            element={<Home />} />\n          <Route path='/listings' element={<Listings msgAlert={msgAlert} user={user} />} />\n          <Route path='/listings' element={<Listings msgAlert={msgAlert} user={user} />} />\n          <Route path='/mylistings' element={<MyListings msgAlert={msgAlert} user={user}/>} />\n          <Route path='/listings/:id' element={<Listing msgAlert={msgAlert} user={user} />} />\n          <Route path='/listings/create' element={<ListingCreate msgAlert={msgAlert} user={user} />} />\n          <Route path='/listings/:id/edit' element={<ListingEdit msgAlert={msgAlert} user={user} />} />\n        </Routes>\n      </main>\n    </>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\n\nimport App from './App'\nimport { BrowserRouter } from 'react-router-dom'\n\nconst appJsx = (\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>\n)\n\nReactDOM.render(appJsx, document.getElementById('root'))\n"],"sourceRoot":""}